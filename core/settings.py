"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from a .env file for development and production
load_dotenv(BASE_DIR / '.env')


# --- Core Settings ---

# SECURITY WARNING: keep the secret key used in production secret!
# This is loaded from the .env file.
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# The .env file should have DEBUG=False for production.
DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'

# Defines which host/domain names are allowed to serve this site.
# Loaded from .env: ALLOWED_HOSTS=your_server_ip,yourdomain.com
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')

ROOT_URLCONF = 'core.urls'
WSGI_APPLICATION = 'core.wsgi.application'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- Application & Middleware Definitions ---

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Our app
    'quiz.apps.QuizConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# --- Templates ---

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# --- Database Configuration ---

# Use dj-database-url to parse the DATABASE_URL environment variable.
# This allows easy switching between PostgreSQL in production and SQLite in development.
DATABASES = {
    'default': dj_database_url.config(
        default=f'sqlite:///{BASE_DIR / "db.sqlite3"}',
        conn_max_age=600  # Persistent database connections
    )
}


# --- Password Validation ---

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# --- Internationalization ---

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# --- Static & Media Files ---

# The URL to access static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
# The absolute path to the directory where `collectstatic` will gather static files for production.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# The URL that media files are served from (user-uploaded content)
MEDIA_URL = '/media/'
# The absolute path to the directory where user-uploaded files will be stored.
MEDIA_ROOT = BASE_DIR / 'media'


# --- Authentication ---

LOGIN_REDIRECT_URL = 'quiz:quiz_list'
LOGIN_URL = 'login'


# --- Production Security Settings ---
# These settings should be enabled when DEBUG is False.

if not DEBUG:
    # Ensures that CSRF cookies are only sent over HTTPS.
    CSRF_COOKIE_SECURE = True
    
    # Ensures that session cookies are only sent over HTTPS.
    SESSION_COOKIE_SECURE = True
    
    # Redirects all non-HTTPS requests to HTTPS.
    SECURE_SSL_REDIRECT = True
    
    # HTTP Strict Transport Security (HSTS) settings.
    # Tells the browser to always use HTTPS for the site.
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True

